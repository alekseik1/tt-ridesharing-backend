language: python
cache: pip
services:
- docker
jobs:
  include:
  - stage: test
    name: "flake8 test"
    install: pip install flake8
    script: python -m flake8 main_app
  #- stage: test
  #  script: docker-compose up --abort-on-container-exit
  - stage: deploy
    name: "heroku"
    script: skip
    deploy:
      provider: heroku
      api_key:
        secure: EUpSdo0gFRSEMz+TwLyGkSE+2JanF4OA36cBabavkcU9CSj1zIhrYrNq1+n9ZBCqBEASt+06TRy8SwyvRaMEVT3p6l7s91X3rC+P5EcQBt7vw1el2dDQIS8K+a/N6h1T6KXYXOGMBxUMIvWN8BYfcV9BkQ2xtBf9gGlOP6J7Am7JGVlyHDdCpT+zXriGIXAwJFuBf7NMx8y153/JV02J7P/M2BVIZFs4mgLs0VMryw0iXr/aclXFaoSM7C7ebk2LhqUl/HiBoRunhKJ72yJnFb3N0wn4UvTsg/EmeCiU1rcTGQhyiQdetaoAPjoGAbsiN4BSqat8zEFPtm9A8AA2eC7XzTHbOBO3n25q9m+xKIedgPQkuu7clEiAJSZAD2f/Z25qO79AnHba0LmLlugvRIo/KEfzcOPuye7gftPzgtdPrSfuQ7R6wYbr2obyuQFcxxN37QeAOp0Pudn6RUu1tAW8WkPZWX0mdoX3z51l5bvqMMEG1+22YQgZQRBbowV9J4Cl/MVT2tM7GwYbbXs4cm3IRNWax9vWm4E8Aly02o9+9C7XwKzUmOjLaiiZxmbtWcEZH7s9SV+hozvmzInF1WImTOyfhUMGHW7tOIuCLqbm1VHBKEu6LCfyb1JZygKSjI9g8d05325R1phEDbh2w25bFApJ6h2hLEErXP1+rYI=
      app:
        master: tt-ridesharing-backend
        dev: tt-ridesharing-backend-staging
  - stage: deploy
    name: "docker hub"
    before_script:
      - docker pull "$IMAGE_NAME" || true
      - export major=0
      - export version=$major.$TRAVIS_BUILD_NUMBER
    script:
      - docker build --pull --cache-from "$IMAGE_NAME" --tag "$IMAGE_NAME" .
    before_deploy:
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    deploy:
      - provider: script
        script: bash +x deploy-docker.sh prod
        on:
          branch: master
      - provider: script
        script: bash +x deploy-docker.sh dev
        on:
          branch: dev
env:
  global:
  - secure: ICUASzQfYtyrRuKSae0gnVPFLJTEQ2CbgJGrAGVipkVGqajU5rW85TDXXg2dkBPae9DtD+DuoYFOPuSYxr+a/71rnvLV5mFQj03M6/V1knddjEWrh4LpdntIdmVTXr8S3DTRoB03i+uaB/Jpoguz6wlMh2cul3zOtc+SEv8SF5bVsFBaBgP5E84FUtH9DrKGMRSeBuFWJ9hd3aO4lI0egkFaN0Xi6/VIcBZMaq8o1kunsTUjO2QOezFzkyvLbO8Gq6w/Oi63DuKbQqix0cC8ZcXyL1EdluhV+GIp7UHDmRw6GkQFaZ+eV7GJlWO4VKewghWFZmIy3bCx2YOTSxTGqxlLa7qv3eMuISVGMfQAJA2NuidJgsJRYmub/5y8paTOMmDKgZUev9TWxD46j1/aShn/RWX20PIjUG+PwqKfEK1FOrT4+WbfRcV7IUXpXw9ECUWFcS+KqlOGyfxt4t1RxcSI8Ttz9DoKe3BJPnxx/UBJyWPiY7/dqCEPIWwlDZQSois7or3UCcVlVZTVua5XmU8rIGoQUtG5WZRodo/RYfV/FWLdl3QV3+0eM1qbXTkMtSh2pVAN23RlYHOrymXJMvtu849Bcg3Ngp+mwsaP2Lvf0P9U4B/5xYnFIHhYUFoZTBo4RiwZNDfVpXrRL+rjuk8HPNc/i+0AmhCE72ov788=
  - secure: R3ZSI16SZQ5PpmqqmYYjvWRKw5bgr+K9AA1CI/ZtKhlNXCmwjs7Qzfp+JoEPRT9bn6K/cUtqC1JXVAIxf841TZlD1F7z75EyXm4eKbazW1XYRhR4xg9ixkaT+nqToBjwcMvSdlJguuJ4q3ROmMGrc9Z3sjw1zYiPYENd8iM//0vrynRbXN41yYAfpA3vhjH4ByL4qlGqN2QclzdM241AFfzO8sQUDOsKVIsn3dQ1wJhnH/kDdof0uIc0qOmif4EbFJkpWCidUogq0sEvnMJqPxp+16X5X2JoSVq70jo5eDA1wIMHeRfG8c0/WobARx5bFCL6ksId3nBaDFl6xYiasdvAILReMFoGgl+XJ+BbMzRHo9gWK8KKShAO/a2pKmUMrOJc0CIzvj8lnvphHiCjq4Tn8gc3hkdAQxihFByNeXLRzBAekbpqNIPYifIr9DPsksUxEQz2qO3jwVmhH0iikk7gRnyISO3jgEGraoCWC7QJkEte+7GHKdHDGf7fYuMU0345xrZquLl82tay54K6/A3xpw2zSbnx7mHUP5f9ynMaROFe7wqBCeBpKNT5ihdiv19nnEud7OPAdJ1GtPeB5+tEnYoKAZz85RkTiLKHWsQSmPVs0nEUFO+Lg4+JLa8RdF6/E4GOMvcKcbBdLIw+xdR1sWVxYHEpHKJ1pCuMO+8=
