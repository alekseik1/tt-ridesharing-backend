version: '3'

services:
  web:
    image: ridesharing/backend
    container_name: ridesharing-backend
    env_file:
      - .env
    volumes:
      - ./firebase_creds.json:/app/firebase_creds.json
    environment:
      - DATABASE_URL=postgresql://app:app@db:5432/ridesharing
      - ELASTICSEARCH_URL=http://es:9200/
    entrypoint: ["./wait-for-it.sh", "es:9200", "--", "./entrypoint.sh"]
    command: ["gunicorn", "-b", "0.0.0.0:8000", "app:create_app()"]
    depends_on:
      - db
      - es

  db:
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app
      - POSTGRES_DB=ridesharing
    volumes:
      - pgdata:/var/lib/postgresql/data

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: es
    environment:
      - cluster.name=es-ridesharing-docker-cluster
      - cluster.initial_master_nodes=es
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  frontend:
    image: ridesharing/frontend
    container_name: ridesharing-frontend
    restart: unless-stopped
    ports:
      - 80:80/tcp
      - 443:443/tcp
    environment:
      CERTBOT_EMAIL: 1alekseik1@gmail.com
      ENVSUBST_VARS: "FQDN BACKEND_URL"
      FQDN: "ridesharing.online"
      BACKEND_URL: "ridesharing-backend:8000"
    volumes:
      # mount nginx config
      - ./conf.d:/etc/nginx/user.conf.d:ro
      - letsencrypt:/etc/letsencrypt
    depends_on:
      - web

  # Automatic updates upon new pushes
  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/ubuntu/.docker/config.json:/config.json
    command: watchtower ridesharing-backend ridesharing-frontend --interval 10 --cleanup
    restart: unless-stopped

volumes:
  es_data01:
    driver: local
  pgdata:
    driver: local
  letsencrypt:
