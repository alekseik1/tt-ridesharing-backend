"""empty message

Revision ID: 273828fef9b1
Revises: 334b4bb056a9
Create Date: 2020-03-21 21:33:22.987421

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '273828fef9b1'
down_revision = '334b4bb056a9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=40), nullable=False),
    sa.Column('last_name', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.Column('photo_url', sa.String(length=2000), nullable=True),
    sa.Column('phone_number', sa.String(length=20), server_default='+71111111111', nullable=False),
    sa.Column('_password_hash', sa.String(length=94), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.drop_table('driver')
    op.drop_table('users')
    op.drop_constraint('association_user_organization_left_id_fkey', 'association_user_organization', type_='foreignkey')
    op.create_foreign_key(None, 'association_user_organization', 'user', ['left_id'], ['id'])
    op.drop_constraint('association_user_ride_left_id_fkey', 'association_user_ride', type_='foreignkey')
    op.create_foreign_key(None, 'association_user_ride', 'user', ['left_id'], ['id'])
    op.drop_constraint('car_owner_id_fkey', 'car', type_='foreignkey')
    op.create_foreign_key(None, 'car', 'user', ['owner_id'], ['id'])
    op.add_column('ride', sa.Column('host_id', sa.Integer(), nullable=False))
    op.add_column('ride', sa.Column('price', sa.Float(), nullable=True))
    op.drop_constraint('ride_host_driver_id_fkey', 'ride', type_='foreignkey')
    op.create_foreign_key(None, 'ride', 'user', ['host_id'], ['id'])
    op.drop_column('ride', 'is_available')
    op.drop_column('ride', 'start_time')
    op.drop_column('ride', 'estimated_time')
    op.drop_column('ride', 'cost')
    op.drop_column('ride', 'host_driver_id')
    op.drop_column('ride', 'is_finished')
    op.drop_column('ride', 'stop_address')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ride', sa.Column('stop_address', sa.VARCHAR(length=600), autoincrement=False, nullable=True))
    op.add_column('ride', sa.Column('is_finished', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.add_column('ride', sa.Column('host_driver_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('ride', sa.Column('cost', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('ride', sa.Column('estimated_time', postgresql.TIME(), autoincrement=False, nullable=True))
    op.add_column('ride', sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('ride', sa.Column('is_available', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'ride', type_='foreignkey')
    op.create_foreign_key('ride_host_driver_id_fkey', 'ride', 'driver', ['host_driver_id'], ['id'])
    op.drop_column('ride', 'price')
    op.drop_column('ride', 'host_id')
    op.drop_constraint(None, 'car', type_='foreignkey')
    op.create_foreign_key('car_owner_id_fkey', 'car', 'driver', ['owner_id'], ['id'])
    op.drop_constraint(None, 'association_user_ride', type_='foreignkey')
    op.create_foreign_key('association_user_ride_left_id_fkey', 'association_user_ride', 'users', ['left_id'], ['id'])
    op.drop_constraint(None, 'association_user_organization', type_='foreignkey')
    op.create_foreign_key('association_user_organization_left_id_fkey', 'association_user_organization', 'users', ['left_id'], ['id'])
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('photo_url', sa.VARCHAR(length=2000), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(length=20), server_default=sa.text("'+71111111111'::character varying"), autoincrement=False, nullable=False),
    sa.Column('_password_hash', sa.VARCHAR(length=94), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('driver',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('license_1', sa.VARCHAR(length=2000), autoincrement=False, nullable=False),
    sa.Column('license_2', sa.VARCHAR(length=2000), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], name='driver_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='driver_pkey')
    )
    op.drop_table('user')
    # ### end Alembic commands ###
